@import "~susy/sass/susy";

$grid-columns: 12;

$susy: (
  'columns': susy-repeat(12),
  'spread': 'wide',
  'container-spread': 'wide'
);

// contain
.u-contain {
  @include responsive-gutters(true);

  &-breakout {
    @include responsive-breakout(true);
  }

  &-breakout\@sm {
    @include bp(sm) {
      margin-right: rem(-$gutter-small);
      margin-left: rem(-$gutter-small);
    }
  }

  &-breakout\@md {
    @include bp(md) {
      margin-right: rem(-$gutter-medium);
      margin-left: rem(-$gutter-medium);
    }
  }
}

// for wrapping forms inside an arbitrary width
.u-wrap {
  max-width: $bp-medium;
}

// contain (old deprecated)
.o-contain {
  @include responsive-gutters(true);

  &__breakout {
    @include responsive-breakout(true);
  }
}

// grid
.u-grid {
  @include responsive-breakout;

  flex-flow: row wrap;
  display: flex;
}

// grid (old deprecated)
.o-grid {
  @include responsive-breakout;

  flex-flow: row wrap;
  display: flex;
}

.u-cell {
  @include responsive-gutters;
}

// cell (old deprecated)
.o-cell {
  @include responsive-gutters;
}

/* replicate bootstrap-like grid classes
   ========================================================================== */

// // mobile first

.col,
[class*="col-"] {
  flex: 1 0 0;
  min-height: 1px;
}

[class*="col-"] {
  flex-basis: auto;
  flex-grow: 0;
}

@for $i from 1 through $grid-columns {
  .col-sm-#{$i} {
    width: span($i of $grid-columns);
  }

  .col-sm-auto {
    flex-basis: 0;
    flex-grow: 1;
  }

  .push-sm-#{$i} {
    margin-left: span($i);
  }
}

// tablet

@include bp(md) {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      width: span($i of $grid-columns);
    }

    .col-md-auto {
      flex-basis: 0;
      flex-grow: 1;
    }

    .push-md-#{$i} {
      margin-left: span($i);
    }
  }
}

@include bp-all('.u-grid-center') {
  justify-content: center;
}
