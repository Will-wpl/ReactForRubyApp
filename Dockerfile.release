ARG DOCKER_PULLTHROUGH_REGISTRY_PREFIX=index.docker.io
ARG IMAGE_NAME=ruby
ARG IMAGE_TAG=2.4.1

FROM ${DOCKER_PULLTHROUGH_REGISTRY_PREFIX}/${IMAGE_NAME}:${IMAGE_TAG} as builder

ARG npm_config_registry=https://nexus.in.spdigital.sg/repository/npm-all/
ARG npm_config_strict_ssl=true

# All of these ENV vars will get overwritten in the k8s deployment config
# Setting them with values now so the app won't complaint
ARG SECRET_KEY_BASE=something
ARG HOSTNAME=some_hostname

ENV RAILS_ENV production
ENV RAILS_SERVE_STATIC_FILES=1
ENV NODE_ENV production

RUN set -ex \
    \
    && add_source_dependencies=' \
        curl \
        gnupg \
    ' \
    \
    && apt-get update \
    && apt-get install -y --no-install-recommends $add_source_dependencies \
    \
    # add node and yarn source
    && curl -sLk https://deb.nodesource.com/setup_9.x | bash - \
    && curl -sSk https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb http://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    \
    # build dependencies
    && build_dependencies=' \
        build-essential \
        git \
        graphviz\
        libpq-dev \
        libxml2-dev \
        libxslt-dev \
        nodejs \
        python \
        tzdata \
        yarn \
    ' \
    && apt-get update \
    && apt-get install -y --no-install-recommends $build_dependencies \
    \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY Gemfile Gemfile
COPY Gemfile.lock Gemfile.lock
RUN bundle install \
        --clean \
        --jobs=4 \
        --no-cache \
        --without=development test

COPY package.json package.json
COPY yarn.lock yarn.lock
RUN yarn install

COPY . .

RUN bundle exec rails assets:precompile

RUN rm -rf node_modules

FROM ${DOCKER_PULLTHROUGH_REGISTRY_PREFIX}/${IMAGE_NAME}:${IMAGE_TAG}

ENV RAILS_ENV production
ENV RAILS_SERVE_STATIC_FILES=1
ENV NODE_ENV production

RUN set -ex \
    \
    && add_source_dependencies=' \
        curl \
        gnupg \
    ' \
    \
    && apt-get update \
    && apt-get install -y --no-install-recommends $add_source_dependencies \
    \
    # add node and yarn source
    && curl -sLk https://deb.nodesource.com/setup_9.x | bash - \
    \
    # runtime dependencies
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        nodejs \
        postgresql-client \
        tzdata \
    \
    # Removal of source and source dependencies
    && rm -rf /var/lib/apt/lists/* \
    && apt-get purge -y --auto-remove $add_source_dependencies

WORKDIR /app

COPY --from=builder /app .
COPY --from=builder /usr/local/bundle /usr/local/bundle

CMD ["bundle", "exec", "rails", "server"]
